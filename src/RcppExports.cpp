// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hpwd
NumericMatrix hpwd(NumericMatrix dis, int nsamp, int nrepl);
RcppExport SEXP _Spbsampling_hpwd(SEXP disSEXP, SEXP nsampSEXP, SEXP nreplSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dis(disSEXP);
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type nrepl(nreplSEXP);
    rcpp_result_gen = Rcpp::wrap(hpwd(dis, nsamp, nrepl));
    return rcpp_result_gen;
END_RCPP
}
// pwd
NumericMatrix pwd(NumericMatrix dis, int niter, int nsamp, int nrepl);
RcppExport SEXP _Spbsampling_pwd(SEXP disSEXP, SEXP niterSEXP, SEXP nsampSEXP, SEXP nreplSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dis(disSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type nrepl(nreplSEXP);
    rcpp_result_gen = Rcpp::wrap(pwd(dis, niter, nsamp, nrepl));
    return rcpp_result_gen;
END_RCPP
}
// swd
NumericMatrix swd(NumericMatrix dis, int niter, int nsamp, int nrepl, int bexp);
RcppExport SEXP _Spbsampling_swd(SEXP disSEXP, SEXP niterSEXP, SEXP nsampSEXP, SEXP nreplSEXP, SEXP bexpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dis(disSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type nrepl(nreplSEXP);
    Rcpp::traits::input_parameter< int >::type bexp(bexpSEXP);
    rcpp_result_gen = Rcpp::wrap(swd(dis, niter, nsamp, nrepl, bexp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Spbsampling_hpwd", (DL_FUNC) &_Spbsampling_hpwd, 3},
    {"_Spbsampling_pwd", (DL_FUNC) &_Spbsampling_pwd, 4},
    {"_Spbsampling_swd", (DL_FUNC) &_Spbsampling_swd, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_Spbsampling(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
